package com.github.dakusui.jcunit.fsm;

import com.github.dakusui.jcunit.core.Checks;
import com.github.dakusui.jcunit.fsm.spec.FSMSpec;
import com.github.dakusui.jcunit.plugins.levelsproviders.MappingLevelsProviderBase;
import com.github.dakusui.jcunit.standardrunner.annotations.Arg;

public class FSMLevelsProvider<SUT> extends MappingLevelsProviderBase<Story<SUT, FSMSpec<SUT>>> {
  private int switchCoverage;

  @Override
  public void init(
      Object[] parameters) {
    this.switchCoverage = ((Integer) parameters[0]);
  }

  /**
   * The first parameter specifies 'switch coverage', which is equal to a number
   * of actions in 'main' scenario sequence - 1.
   * It represents a number of states passed (switches) during the sequence is executed.
   * If 0 is specified to this parameter, only one action will be performed in a
   * main scenario sequence generated by FSM/JCUnit.
   *
   * @return definitions of parameters for this TupleGenerator
   */
  @Override
  public Arg.Type[] parameterTypes() {
    return new Arg.Type[] {
        new Arg.Type() {
          @Override
          public Object parse(String[] values) {
            Integer ret = (Integer) Arg.Type.Int.withDefaultValue(1).parse(values);
            Checks.checktest(ret >= 0, "switchCoverage must be equal to or greater than 0");
            return ret;
          }
        }.withDefaultValue(1),
    };
  }

  public int getSwitchCoverage() {
    return this.switchCoverage;
  }
}
