package com.github.dakusui.jcunit.runners.core;

import com.github.dakusui.jcunit.core.Checks;
import com.github.dakusui.jcunit.core.tuples.Tuple;
import com.github.dakusui.jcunit.core.tuples.TupleUtils;

import java.io.Serializable;

public class TestCase implements Serializable {
  private final int     id;
  private final Type    type;
  private final Tuple   tuple;

  public TestCase(int id, Type type, Tuple tuple) {
    this.id = id;
    this.type = Checks.checknotnull(type);
    this.tuple = Checks.checknotnull(tuple);
  }

  public int getId() {
    return id;
  }

  public Type getType() {
    return type;
  }

  public Tuple getTuple() {
    return TupleUtils.unmodifiableTuple(tuple);
  }

  /**
   * Identifies what kind of category to which a test case belongs.
   */
  public enum Type {
    /**
     * A custom test case, which is returned by a method annotated with {@literal @}{@code CustomTestCases}.
     */
    Custom,
    /**
     * A generated test case. A test case generated by JCUnit framework through an implementation of {@code CAEngine}
     * belongs to this category.
     */
    Generated,
    /**
     * A test case which violates some defined constraint belongs to this category.
     * Test cases returned by {@code ConstraintManager#getViolations} belongs to this.
     */
    Violation
  }
}
